import { Key, Cache, State } from '../types';
export declare const noop: () => void;
export declare const UNDEFINED: undefined;
export declare const OBJECT: ObjectConstructor;
export declare const isUndefined: (v: any) => v is undefined;
export declare const isFunction: (v: any) => v is Function;
export declare const isEmptyCache: (v: any) => boolean;
export declare const mergeObjects: (a: any, b: any) => any;
export declare const isWindowDefined: boolean;
export declare const isDocumentDefined: boolean;
export declare const hasRequestAnimationFrame: () => boolean;
export declare const createCacheHelper: <Data = any, T = State<Data, any>>(cache: Cache, key: Key) => readonly [() => T, (info: T) => void, (key: string, callback: (current: any, prev: any) => void) => () => void];
